name: Manual Patch
permissions: write-all

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Which patch provider to use?'
        required: true
        default: 'revanced'
        type: choice
        options:
          - 'revanced'
          - 'anddea'
          - 'piko'
          - 'experiments'
      app:
        description: 'Which app to patch?'
        required: true
        type: choice
        options:
          - 'youtube'
          - 'twitter'
          - 'instagram'
          - 'googlephotos'
          - 'soundcloud'
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      app:
        required: true
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

  build:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      # Map target to script name
      - name: Set script name
        id: script
        run: |
          case "${{ inputs.target || github.event.inputs.target }}" in
            "revanced")
              echo "name=Revanced.sh" >> $GITHUB_OUTPUT
              ;;
            "anddea")
              echo "name=Anddea-Revanced-Extended.sh" >> $GITHUB_OUTPUT
              ;;
            "piko")
              echo "name=Piko.sh" >> $GITHUB_OUTPUT
              ;;
            "experiments")
              echo "name=Revanced-Experiment.sh" >> $GITHUB_OUTPUT
              ;;
          esac
      
      - name: Build ${{ inputs.app || github.event.inputs.app }}
        run: bash src/build/${{ steps.script.outputs.name }} ${{ inputs.app || github.event.inputs.app }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: patched-apk
          path: |
            release/*.apk
            release/versions.txt

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: patched-apk
          path: artifacts
      
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get version info
          version_file=$(find artifacts -name "versions.txt" | head -n 1)
          app="${{ inputs.app || github.event.inputs.app }}"
          version=$(grep "$app=" "$version_file" | cut -d'=' -f2 || echo "N/A")
          
          # Create release notes
          release_notes="### Manual Build\n"
          release_notes+="- App: $app\n"
          release_notes+="- Version: $version\n"
          release_notes+="- Patch Provider: ${{ inputs.target || github.event.inputs.target }}\n"
          
          # Create release
          release_tag="manual-$(date +'%Y.%m.%d-%H%M%S')"
          gh release create "$release_tag" \
            --title "Manual Build $release_tag" \
            --notes "$release_notes" \
            artifacts/*.apk
