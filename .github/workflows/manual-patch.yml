name: Manual Patch
permissions: write-all
env:
  repository: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  org_input: ${{ inputs.org }}
  org_event_input: ${{ github.event.inputs.org }}
on:
  workflow_dispatch:
    inputs:
      org:
        description: 'Which "Revanced" do you want to patch?'
        required: true
        default: 'Revanced'
        type: choice
        options:
          - 'Revanced'
          - 'RVX Anddea'
          - 'Twitter Piko'
          - 'Revanced Experiments'
  workflow_call:
    inputs:
      org:
        required: true
        type: string
jobs:
  patch_rv_beta:
    name: Patch Revanced
    if: ${{ github.event.inputs.org == 'Revanced' || inputs.org == 'Revanced' }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --user root
    strategy:
      matrix:
        app: ["ggphotos", "soundcloud"]  # Google Photos, SoundCloud
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Preparing to patch
        uses: ./.github/actions/preparing
      - name: Install library
        run: |
          apt-get update
          apt-get install -y curl jq wget unzip
      - name: Check github connection
        id: check-gh-rvb
        run: bash src/etc/connection.sh
      - name: Patch apk
        id: patch-rvb
        if: steps.check-gh-rvb.outputs.internet_error == '0'
        run: bash src/build/Revanced-Beta.sh ${{ matrix.app }}
      - name: Cache
        uses: actions/upload-artifact@v4
        with:
          name: revanced_beta_${{ matrix.app }}
          path: |
            ./release/*.apk
  release_rv_beta:
    name: Release Revanced Beta
    needs: patch_rv_beta
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: revanced_beta_*
          path: ./release
          merge-multiple: true
      - name: Releasing APK files
        uses: ./.github/actions/release

  patch_rve_anddea_beta:
    name: Patch RVX Anddea
    if: ${{ github.event.inputs.org == 'RVX Anddea' || inputs.org == 'RVX Anddea' }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --user root
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Preparing to patch
        uses: ./.github/actions/preparing
      - name: Install library
        run: |
          apt-get update
          apt-get install -y curl jq wget unzip
      - name: Check github connection
        id: check-gh-rve-anddea-beta
        run: bash src/etc/connection.sh
      - name: Patch apk
        id: patch-rve-anddea-beta
        if: steps.check-gh-rve-anddea-beta.outputs.internet_error == '0'
        run: bash src/build/Anddea-Revanced-Extended-Beta.sh youtube-rve
      - name: Cache
        uses: actions/upload-artifact@v4
        with:
          name: revanced_extended_beta
          path: |
            ./release/*.apk
  release_rve_anddea_beta:
    name: Release RVX Anddea Beta
    needs: patch_rve_anddea_beta
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Cache
        uses: actions/download-artifact@v4
        with:
          name: revanced_extended_beta
          path: ./release
      - name: Releasing APK files
        uses: ./.github/actions/release

  patch_twitter_piko_beta:
    name: Patch Twitter Piko
    if: ${{ github.event.inputs.org == 'Twitter Piko' || inputs.org == 'Twitter Piko' }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --user root
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Preparing to patch
        uses: ./.github/actions/preparing
      - name: Install library
        run: |
          apt-get update
          apt-get install -y curl jq wget unzip
      - name: Check github connection
        id: check-gh-piko-beta
        run: bash src/etc/connection.sh
      - name: Patch apk
        id: patch-piko-beta
        if: steps.check-gh-piko-beta.outputs.internet_error == '0'
        run: bash src/build/Piko.sh prerelease
      - name: Cache
        uses: actions/upload-artifact@v4
        with:
          name: revanced_piko_beta
          path: |
            ./release/*.apk
  release_twitter_piko_beta:
    name: Release Twitter Piko Beta
    needs: patch_twitter_piko_beta
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Cache
        uses: actions/download-artifact@v4
        with:
          name: revanced_piko_beta
          path: ./release
      - name: Releasing APK files
        uses: ./.github/actions/release

  patch_rv_experiments:
    name: Patch Revanced Experiments
    if: ${{ github.event.inputs.org == 'Revanced Experiments' || inputs.org == 'Revanced Experiments' }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --user root
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Preparing to patch
        uses: ./.github/actions/preparing
      - name: Install library
        run: |
          apt-get update
          apt-get install -y curl jq wget unzip
      - name: Check github connection
        id: check-gh-rv-experiments
        run: bash src/etc/connection.sh
      - name: Patch apk
        id: patch-rv-experiments
        if: steps.check-gh-rv-experiments.outputs.internet_error == '0'
        run: bash src/build/Revanced-Experiment.sh instagram-rve
      - name: Cache
        uses: actions/upload-artifact@v4
        with:
          name: revanced_experiments
          path: |
            ./release/*.apk
  release_rv_experiments:
    name: Release Revanced Experiments
    needs: patch_rv_experiments
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Cache
        uses: actions/download-artifact@v4
        with:
          name: revanced_experiments
          path: ./release
      - name: Releasing APK files
        uses: ./.github/actions/release
